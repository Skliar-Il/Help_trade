from telebot import *
from sqlalchemy import select, insert, update, or_
from sqlalchemy.orm import joinedload

from config import TG_BOT_TOKEN, GROUP_CHAT_ID, CHAT_ID
from databse import async_session_factory
from models.models import *
from telebot.types import Message
from telebot.async_telebot import AsyncTeleBot

import time
import asyncio




bot = AsyncTeleBot(TG_BOT_TOKEN)
user_states = {}
securities = Table_Subscribe.__table__.columns.keys()[7:]
change_settings_types_messages = ["change_settings_type_change_open", "change_settings_type_change_volume"]
types_messages_switch = ["switch_type_change_open", "switch_type_many_lot", "switch_type_change_volume"]


@bot.message_handler(commands=["start"])    
async def start(message):
    
    async with async_session_factory() as session:
        data = await session.execute(select(Table_Users.id).where(Table_Users.tg_id == message.chat.id))
        data = data.scalar()
        
        if data == None:
            user_id = message.chat.id
            await session.execute(insert(Table_Users).values({Table_Users.tg_id: user_id}))
            await session.execute(insert(Table_Subscribe).values({Table_Subscribe.tg_id: user_id, Table_Subscribe.days_subscribe: 30}))
            
            await session.commit()
        await session.close()
        
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ú–µ–Ω—é", callback_data = "menu"))
    
    await bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Çüñê, {message.from_user.first_name}, —è –±—É–¥—É –æ–ø–æ–≤–µ—â–∞—Ç—å —Ç–µ–±—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –Ω–∞ —Ä—ã–Ω–∫–µ", reply_markup=markup)
    
@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == "register_change_volume")
async def register_user_state_change_volume(message):
    markup = types.InlineKeyboardMarkup()
    change_volume_settings = message.text
    
    if change_volume_settings == "-":
        markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="types_message"))
        await bot.send_message(message.chat.id, "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup)
        return 0 
    
    try:
        change_volume_settings = abs(float(change_volume_settings))

    except:
        markup.add(types.InlineKeyboardButton("–ü–æ–ø—Ä–æ–±–æ–≤–∏—Ç—å —Å–Ω–æ–≤–∞", callback_data="change_settings_type_change_volume"))
        markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="types_message"))
        await bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä—ã–π –≤–≤–æ–¥", reply_markup=markup)
        return 0 
    
    async with async_session_factory() as session:
        await session.execute(update(Table_Subscribe)
                              .values({Table_Subscribe.type_change_volume: change_volume_settings})
                              .where(Table_Subscribe.tg_id == message.chat.id))
        await session.commit()
        
    markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="types_message"))
    await bot.send_message(message.chat.id, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã", reply_markup=markup)
    
@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == "register_change_open")
async def register_user_state_change_open(message):
    markup = types.InlineKeyboardMarkup()
    change_open_settings = message.text
    
    if change_open_settings == "-":
        markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="types_message"))
        await bot.send_message(message.chat.id, "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup)
        return 0 
    
    try:
        change_open_settings = abs(float(change_open_settings))

    except:
        markup.add(types.InlineKeyboardButton("–ü–æ–ø—Ä–æ–±–æ–≤–∏—Ç—å —Å–Ω–æ–≤–∞", callback_data="change_settings_type_change_open"))
        markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="types_message"))
        await bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä—ã–π –≤–≤–æ–¥", reply_markup=markup)
        return 0 
    
    async with async_session_factory() as session:
        await session.execute(update(Table_Subscribe)
                              .values({Table_Subscribe.type_change_open: change_open_settings})
                              .where(Table_Subscribe.tg_id == message.chat.id))
        await session.commit()
        
    markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="types_message"))
    await bot.send_message(message.chat.id, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã", reply_markup=markup)

@bot.callback_query_handler(func=lambda callback: True)
async def callback_handler(callback):
    if callback.data == "menu":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("üìé–û –±–æ—Ç–µ", callback_data="bot_information"))
        markup.add(types.InlineKeyboardButton("üë§–ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile"))
        markup.add(types.InlineKeyboardButton("‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings"))
        
        await bot.edit_message_text("–ú–µ–Ω—é:", callback.message.chat.id, callback.message.id, reply_markup=markup)

    if callback.data == "bot_information":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="menu"))
        
        #–ù–∞–ø–∏—Å–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –±–æ—Ç–∞ 
        await bot.edit_message_text("\t–≠—Ç–æ—Ç –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –Ω–∞ —Ä—ã–Ω–∫–µ, –µ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø–æ–ª—É—á–µ—Ç–µ. –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å –±—É–º–∞–≥–∏, –∞ —Ç–∞–∫ –∂–µ –≤—ã–±—Ä–∞—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π. \n\n–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å –æ—Ç–∫—Ä—ã—Ç–∏—è, –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å –æ—Ç–∫—Ä—ã—Ç–∏—è —Ä—ã–Ω–∫–∞, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–¥–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ. \n–ü—Ä–∏–º–µ—Ä: SBER:TQBR –†–æ—Å—Ç —Å –æ—Ç–∫—Ä—ã—Ç–∏—è —Ä—ã–Ω–∫–∞ +2 %.\n\n–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–±—ä–µ–º–∞, –æ—Ç–≤–µ—á–∞–µ—Ç  –∑–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ä–µ–∑–∫–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –æ–±—ä–µ–º–∞, –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤—ã —É–∫–∞–∑—ã–≤–∞–µ—Ç–µ –æ—Ç –∫–∞–∫–æ–≥–æ –æ–±—ä–µ–º–∞, –≤ –º–∏–ª–ª–∏–æ–Ω–∞—Ö, –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.\n–ü—Ä–∏–º–µ—Ä: ROSN:TQBR.  –†–µ–∑–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ–±—ä–µ–º–∞  -   1M. –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–∞ –¥–µ–Ω—å –≤  14.41 —Ä–∞–∑. –°—Ä–µ–¥–Ω–∏–π –æ–±—ä–µ–º –∑–∞ –¥–µ–Ω—å  53158.9. –¶–µ–Ω–∞ –ó–∞–∫—Ä—ã—Ç–∏—è 457.65. –û–±—ä–µ–º 765841. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã 5 –ø—É–Ω–∫—Ç–æ–≤. –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä SB  811 (0.02)\n\n–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –∫—Ä—É–ø–Ω–∞—è –∑–∞—è–≤–∫–∞, –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ –∫—Ä—É–ø–Ω–æ–π –∑–∞—è–≤–∫–µ –Ω–∞ —Ä—ã–Ω–∫–µ, —ç—Ç–æ—Ç —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ–ª—å–∑—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å.\n–ü—Ä–∏–º–µ—Ä: SBER:TQBR.  –ö—Ä—É–ø–Ω–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ü–û–ö–£–ü–ö–£. –û–±—ä–µ–º  17138 - –Ω–∞ —Å—É–º–º—É 43.016 –º–ª–Ω. —Ä—É–±.. –¶–µ–Ω–∞  251. –¶–µ–Ω–∞ –ª—É—á—à–µ–π –ø–æ–∫—É–ø–∫–∏ 251.19.", callback.message.chat.id, callback.message.id, reply_markup=markup)
        
    if callback.data == "profile":
        markup = types.InlineKeyboardMarkup()
        
        text = "üë§–ü—Ä–æ—Ñ–∏–ª—å:\n\nID: {}\n–ò–º—è: {}\n–ü–æ–¥–ø–∏—Å–∫–∞: {}\n–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {}\n"
        id = callback.message.chat.id
        name = callback.message.chat.first_name
        subscribe = "‚úÖ"
        
        async with async_session_factory() as session:
            data = await session.execute(select(Table_Users)
                                         .where(Table_Users.tg_id == id)
                                         .options(joinedload(Table_Users.detail_subscribe)))
            data = data.scalar()
            await session.close()
            
        date_register = data.date_register + datetime.timedelta(hours=4)
        if data.detail_subscribe.days_subscribe <= 0: 
            subscribe = "‚ùå"
            markup.add(types.InlineKeyboardButton("‚úÖ–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", callback_data="subscribe"))
        
        else:
            markup.add(types.InlineKeyboardButton("‚ùå–û–ø–∏—Å–∞—Ç—å—Å—è", callback_data="unsubscribe"))
        
        markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="menu"))
            
        await bot.edit_message_text(text.format(id, name, subscribe, date_register.strftime("%Y-%m-%d %H:%M")), 
                                    id, callback.message.id, reply_markup=markup)
    
    if callback.data == "subscribe":
        id = callback.message.chat.id
        markup = types.InlineKeyboardMarkup()
        
        async with async_session_factory() as session:
            await session.execute(update(Table_Subscribe).values({Table_Subscribe.days_subscribe: 30})
                            .where(Table_Subscribe.tg_id == id))
            await session.commit()
            
        markup.add(types.InlineKeyboardButton("–û–±–Ω–æ–≤–∏—Ç—å", callback_data="profile"))
        await bot.edit_message_text("‚úÖ–í—ã –ü–æ–¥–ø–∏—Å–∞–ª–∏—Å—å", id, callback.message.id, reply_markup=markup)
        
    if callback.data == "unsubscribe":
        id = callback.message.chat.id
        markup = types.InlineKeyboardMarkup()
        
        async with async_session_factory() as session:
            await session.execute(update(Table_Subscribe).values({Table_Subscribe.days_subscribe: 0})
                            .where(Table_Subscribe.tg_id == id))
            await session.commit()
            
        markup.add(types.InlineKeyboardButton("–û–±–Ω–æ–≤–∏—Ç—å", callback_data="profile"))
        await bot.edit_message_text("‚ùå–í—ã –û—Ç–ø–∏—Å–∞–ª–∏—Å—å", id, callback.message.id, reply_markup=markup)
    
    if callback.data == "settings":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("‚ÅâÔ∏è–û –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö", callback_data="settings_information"))
        markup.add(types.InlineKeyboardButton("–¢–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π", callback_data="types_message"))
        markup.add(types.InlineKeyboardButton("–ë—É–º–∞–≥–∏", callback_data="securities"))
        markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="menu"))
        
        await bot.edit_message_text("–ù–∞—Å—Ç—Ä–æ–π–∫–∏:", callback.message.chat.id, callback.message.id, reply_markup=markup)
        
    if callback.data == "types_message":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ò–∑–µ–º–µ–Ω–µ–Ω–∏–µ –æ–±—å–µ–º–∞", callback_data="change_volume"))
        markup.add(types.InlineKeyboardButton("–ò–∑–µ–º–µ–Ω–µ–Ω–∏–µ —Å –æ—Ç–∫—Ä—ã—Ç–∏—è —Ä—ã–Ω–∫–∞", callback_data="change_open"))
        markup.add(types.InlineKeyboardButton("–ö—Ä—É–ø–Ω–∞—è –∑–∞—è–≤–∫–∞", callback_data="many_lot"))
        markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="settings"))
        
        await bot.edit_message_text("–¢–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π:", callback.message.chat.id, callback.message.id, reply_markup=markup)
        
    if callback.data == "securities":
        markup = types.InlineKeyboardMarkup()
        buttons = []
        
        async with async_session_factory() as session:
            data = await session.execute(select(Table_Subscribe).where(Table_Subscribe.tg_id == callback.message.chat.id))
            data = data.scalars().all()
            for i in securities:
                status = "‚úÖ"
                
                if getattr(data[0], i) == False:
                    status = "‚ùå"
                buttons.append(types.InlineKeyboardButton(i+status, callback_data=i))
                
        for i in range(0, len(buttons)-2, 4):
            markup.row(buttons[i], buttons[i+1], buttons[i+2], buttons[i+3])
                
        markup.row(buttons[-1], buttons[-2])
        markup.row(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="settings"))
        
            
        await bot.edit_message_text("üì∞–ë—É–º–∞–≥–∏, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç–µ –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:", callback.message.chat.id, callback.message.id, reply_markup=markup)
    
    if callback.data in securities:
        markup = types.InlineKeyboardMarkup()
        
        async with async_session_factory() as session:
            Table_Subscribe_Column = getattr(Table_Subscribe, callback.data)
            await session.execute(update(Table_Subscribe)
                                  .values({Table_Subscribe_Column: case(
                (Table_Subscribe_Column == True, False),
                else_=True
            )})
                                  .where(Table_Subscribe.tg_id == callback.message.chat.id))
            await session.commit()
            
        if callback.message.text == "–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã":
            bot.delete_message(callback.message.chat.id, callback.message.id)
            
        markup.add(types.InlineKeyboardButton("–û–±–Ω–æ–≤–∏—Ç—å", callback_data="securities"))
        
        await bot.send_message(callback.message.chat.id, "–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã", reply_markup=markup)
        
    if callback.data == "settings_information":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="settings"))
        
        #–ü—Ä–∏–¥—É–º–∞—Ç—å —Ç–∞–∫—Å—Ç –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
        await bot.edit_message_text("–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å –æ—Ç–∫—Ä—ã—Ç–∏—è, –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å –æ—Ç–∫—Ä—ã—Ç–∏—è —Ä—ã–Ω–∫–∞, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–¥–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ. \n–ü—Ä–∏–º–µ—Ä: SBER:TQBR –†–æ—Å—Ç —Å –æ—Ç–∫—Ä—ã—Ç–∏—è —Ä—ã–Ω–∫–∞ +2 %.\n\n–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–±—ä–µ–º–∞, –æ—Ç–≤–µ—á–∞–µ—Ç  –∑–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ä–µ–∑–∫–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –æ–±—ä–µ–º–∞, –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤—ã —É–∫–∞–∑—ã–≤–∞–µ—Ç–µ –æ—Ç –∫–∞–∫–æ–≥–æ –æ–±—ä–µ–º–∞, –≤ –º–∏–ª–ª–∏–æ–Ω–∞—Ö, –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.\n–ü—Ä–∏–º–µ—Ä: ROSN:TQBR.  –†–µ–∑–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ–±—ä–µ–º–∞  -   1M. –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–∞ –¥–µ–Ω—å –≤  14.41 —Ä–∞–∑. –°—Ä–µ–¥–Ω–∏–π –æ–±—ä–µ–º –∑–∞ –¥–µ–Ω—å  53158.9. –¶–µ–Ω–∞ –ó–∞–∫—Ä—ã—Ç–∏—è 457.65. –û–±—ä–µ–º 765841. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã 5 –ø—É–Ω–∫—Ç–æ–≤. –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä SB  811 (0.02)\n\n–¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –∫—Ä—É–ø–Ω–∞—è –∑–∞—è–≤–∫–∞, –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ –∫—Ä—É–ø–Ω–æ–π –∑–∞—è–≤–∫–µ –Ω–∞ —Ä—ã–Ω–∫–µ, —ç—Ç–æ—Ç —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ–ª—å–∑—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å.\n–ü—Ä–∏–º–µ—Ä: SBER:TQBR.  –ö—Ä—É–ø–Ω–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ü–û–ö–£–ü–ö–£. –û–±—ä–µ–º  17138 - –Ω–∞ —Å—É–º–º—É 43.016 –º–ª–Ω. —Ä—É–±.. –¶–µ–Ω–∞  251. –¶–µ–Ω–∞ –ª—É—á—à–µ–π –ø–æ–∫—É–ø–∫–∏ 251.19.", callback.message.chat.id, callback.message.id, reply_markup=markup)
        
    if callback.data == "change_volume":
        markup = types.InlineKeyboardMarkup()
        
        async with async_session_factory() as session: 
            data = await session.execute(select(Table_Subscribe.type_change_volume).where(Table_Subscribe.tg_id == callback.message.chat.id))
            data = data.scalar()
            
        if data == -1:
            settings = "–û—Ç–∫–ª—é—á–µ–Ω–æ"
            
            markup.add(types.InlineKeyboardButton("–ü–æ–¥–∫–ª—é—á–∏—Ç—å", callback_data="switch_type_change_volume"))
        
        elif data >=0:
            settings = data
            if data == 0: settings = "–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é"
            
            markup.add(types.InlineKeyboardButton("–û—Ç–∫–ª—é—á–∏—Ç—å", callback_data="switch_type_change_volume"))
            markup.add(types.InlineKeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å", callback_data="change_settings_type_change_volume"))
            
        markup.add(types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é", callback_data="set_default_settings_type_change_volume"))            
        markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="types_message"))
        
        await bot.edit_message_text(f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–±—å–µ–º–∞\n\n–ù–∞—Å—Ç—Ä–æ–π–∫–∏: {settings}", callback.message.chat.id, callback.message.id, reply_markup=markup)
        
    if callback.data == "change_open":
        markup = types.InlineKeyboardMarkup()
        
        async with async_session_factory() as session: 
            data = await session.execute(select(Table_Subscribe.type_change_open).where(Table_Subscribe.tg_id == callback.message.chat.id))
            data = data.scalar()
            
        if data == -1:
            settings = "–û—Ç–∫–ª—é—á–µ–Ω–æ"
            markup.add(types.InlineKeyboardButton("–ü–æ–¥–∫–ª—é—á–∏—Ç—å", callback_data="switch_type_change_open"))
        
        elif data >=0:
            settings = data
            if data == 0: settings = "–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é"
            
            markup.add(types.InlineKeyboardButton("–û—Ç–∫–ª—é—á–∏—Ç—å", callback_data="switch_type_change_open"))
            markup.add(types.InlineKeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å", callback_data="change_settings_type_change_open"))
            
        markup.add(types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é", callback_data="set_default_settings_type_change_open"))
        markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="types_message"))
        
        await bot.edit_message_text(f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ c –æ—Ç–∫—Ä—ã—Ç–∏—è —Ä—ã–Ω–∫–∞\n\n–ù–∞—Å—Ç—Ä–æ–π–∫–∏: {settings}", callback.message.chat.id, callback.message.id, reply_markup=markup)
        
    if callback.data == "many_lot":
        markup = types.InlineKeyboardMarkup()
        
        async with async_session_factory() as session: 
            data = await session.execute(select(Table_Subscribe.type_many_lot).where(Table_Subscribe.tg_id == callback.message.chat.id))
            data = data.scalar()
            
        if data == -1:
            markup.add(types.InlineKeyboardButton("–ü–æ–¥–∫–ª—é—á–∏—Ç—å", callback_data="switch_type_many_lot"))
        
        elif data >=0:
            markup.add(types.InlineKeyboardButton("–û—Ç–∫–ª—é—á–∏—Ç—å", callback_data="switch_type_many_lot"))
            
        markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="types_message"))
        
        await bot.edit_message_text(f"–ö—Ä—É–ø–Ω–∞—è –∑–∞—è–≤–∫–∞", callback.message.chat.id, callback.message.id, reply_markup=markup)
    
    if callback.data == "change_settings_type_change_volume":
        user_states[callback.message.chat.id] = "register_change_volume"
        
        await bot.send_message(callback.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ —Ç–µ, –≥–¥–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω—ã –ø–æ –º–æ–¥—É–ª—é –≤–≤–µ–¥–µ–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è\n–î–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Å—Ç–≤–∏—è –≤–≤–µ–¥–∏—Ç–µ: -")
        
    if callback.data == "change_settings_type_change_open":
        user_states[callback.message.chat.id] = "register_change_open"
        
        await bot.send_message(callback.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ —Ç–µ, –≥–¥–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω—ã –ø–æ –º–æ–¥—É–ª—é –≤–≤–µ–¥–µ–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è\n–î–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Å—Ç–≤–∏—è –≤–≤–µ–¥–∏—Ç–µ: -")
        
    if callback.data == "set_default_settings_type_change_volume":
        async with async_session_factory() as session:
            await session.execute(update(Table_Subscribe).values({Table_Subscribe.type_change_volume: 0}))
            await session.commit()
            
        markup  = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="types_message"))
        await bot.send_message(callback.message.chat.id, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã", reply_markup=markup)
        
    if callback.data == "set_default_settings_type_change_open":
        async with async_session_factory() as session:
            await session.execute(update(Table_Subscribe).values({Table_Subscribe.type_change_open: 0}))
            await session.commit()
            
        markup  = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("¬´–ù–∞–∑–∞–¥", callback_data="types_message"))
        await bot.send_message(callback.message.chat.id, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã", reply_markup=markup)
        
    if callback.data in types_messages_switch:
        markup = types.InlineKeyboardMarkup()
        column_name = callback.data[7:]
        column = getattr(Table_Subscribe, column_name)
        
        async with async_session_factory() as session:
            await session.execute(update(Table_Subscribe)
                            .values({
                                column: case(
                                    (column == -1, 0),
                                    (column >=0, -1)
                                )
                            })
                            .where(Table_Subscribe.tg_id == callback.message.chat.id))
            await session.commit()
            
            markup.add(types.InlineKeyboardButton("–û–±–Ω–æ–≤–∏—Ç—å", callback_data=callback.data[12:]))
            await bot.send_message(callback.message.chat.id, "–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã", reply_markup=markup)
            
    
            
while True:
    try:
        asyncio.run(bot.polling())
        
    except:
        time.sleep(1)

# asyncio.run(bot.polling())